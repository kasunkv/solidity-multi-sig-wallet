/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ownable, OwnableInterface } from "../Ownable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner2",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner3",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address[3]",
        name: "owners",
        type: "address[3]",
      },
    ],
    name: "OwnershipAssigned",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103d43803806103d483398181016040528101906100329190610281565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506040516101e3919061036c565b60405180910390207f60dd1e706ac2c98fc3202e493f960e08414faa04099f25621d8bdef8947b4d1760405160405180910390a25050610387565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061024e82610223565b9050919050565b61025e81610243565b811461026957600080fd5b50565b60008151905061027b81610255565b92915050565b600080604083850312156102985761029761021e565b5b60006102a68582860161026c565b92505060206102b78582860161026c565b9150509250929050565b600060039050919050565b600081905092915050565b6000819050919050565b6102ea81610243565b82525050565b60006102fc83836102e1565b60208301905092915050565b6000602082019050919050565b61031e816102c1565b61032881846102cc565b9250610333826102d7565b8060005b8381101561036457815161034b87826102f0565b965061035683610308565b925050600181019050610337565b505050505050565b60006103788284610315565b60608201915081905092915050565b603f806103956000396000f3fe6080604052600080fdfea2646970667358221220151e4a5dc7237b258a11f3f20f1a3840fa691374100390dcf208749eead1349164736f6c634300080a0033";

type OwnableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ownable__factory extends ContractFactory {
  constructor(...args: OwnableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    owner2: string,
    owner3: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ownable> {
    return super.deploy(owner2, owner3, overrides || {}) as Promise<Ownable>;
  }
  getDeployTransaction(
    owner2: string,
    owner3: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner2, owner3, overrides || {});
  }
  attach(address: string): Ownable {
    return super.attach(address) as Ownable;
  }
  connect(signer: Signer): Ownable__factory {
    return super.connect(signer) as Ownable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnableInterface {
    return new utils.Interface(_abi) as OwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Ownable {
    return new Contract(address, _abi, signerOrProvider) as Ownable;
  }
}
